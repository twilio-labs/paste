{
  "Label": {
    "about": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "accessKey": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "aria-activedescendant": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
    },
    "aria-atomic": {
      "type": "Booleanish",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
    },
    "aria-autocomplete": {
      "type": "\"list\" | \"none\" | \"inline\" | \"both\"",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
    },
    "aria-busy": {
      "type": "Booleanish",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
    },
    "aria-checked": {
      "type": "boolean | \"true\" | \"false\" | \"mixed\"",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
    },
    "aria-colcount": {
      "type": "number",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines the total number of columns in a table, grid, or treegrid."
    },
    "aria-colindex": {
      "type": "number",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
    },
    "aria-colspan": {
      "type": "number",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
    },
    "aria-controls": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
    },
    "aria-current": {
      "type": "| boolean\n  | \"time\"\n  | \"true\"\n  | \"false\"\n  | \"page\"\n  | \"step\"\n  | \"location\"\n  | \"date\"",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates the element that represents the current item within a container or set of related elements."
    },
    "aria-describedby": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Identifies the element (or elements) that describes the object."
    },
    "aria-details": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Identifies the element that provides a detailed, extended description for the object."
    },
    "aria-disabled": {
      "type": "Booleanish",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
    },
    "aria-dropeffect": {
      "type": "\"link\" | \"none\" | \"copy\" | \"execute\" | \"move\" | \"popup\"",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates what functions can be performed when a dragged object is released on the drop target."
    },
    "aria-errormessage": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Identifies the element that provides an error message for the object."
    },
    "aria-expanded": {
      "type": "Booleanish",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
    },
    "aria-flowto": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
    },
    "aria-grabbed": {
      "type": "Booleanish",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
    },
    "aria-haspopup": {
      "type": "| boolean\n  | \"dialog\"\n  | \"menu\"\n  | \"true\"\n  | \"false\"\n  | \"grid\"\n  | \"listbox\"\n  | \"tree\"",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
    },
    "aria-hidden": {
      "type": "Booleanish",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates whether the element is exposed to an accessibility API."
    },
    "aria-invalid": {
      "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates the entered value does not conform to the format expected by the application."
    },
    "aria-keyshortcuts": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
    },
    "aria-label": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines a string value that labels the current element."
    },
    "aria-labelledby": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Identifies the element (or elements) that labels the current element."
    },
    "aria-level": {
      "type": "number",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines the hierarchical level of an element within a structure."
    },
    "aria-live": {
      "type": "\"off\" | \"assertive\" | \"polite\"",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
    },
    "aria-modal": {
      "type": "Booleanish",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates whether an element is modal when displayed."
    },
    "aria-multiline": {
      "type": "Booleanish",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
    },
    "aria-multiselectable": {
      "type": "Booleanish",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates that the user may select more than one item from the current selectable descendants."
    },
    "aria-orientation": {
      "type": "\"horizontal\" | \"vertical\"",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
    },
    "aria-owns": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
    },
    "aria-placeholder": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
    },
    "aria-posinset": {
      "type": "number",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
    },
    "aria-pressed": {
      "type": "boolean | \"true\" | \"false\" | \"mixed\"",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates the current \"pressed\" state of toggle buttons."
    },
    "aria-readonly": {
      "type": "Booleanish",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates that the element is not editable, but is otherwise operable."
    },
    "aria-relevant": {
      "type": "| \"text\"\n  | \"additions\"\n  | \"additions removals\"\n  | \"additions text\"\n  | \"all\"\n  | \"removals\"\n  | \"removals additions\"\n  | \"removals text\"\n  | \"text additions\"\n  | \"text removals\"",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
    },
    "aria-required": {
      "type": "Booleanish",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates that user input is required on the element before a form may be submitted."
    },
    "aria-roledescription": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines a human-readable, author-localized description for the role of an element."
    },
    "aria-rowcount": {
      "type": "number",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines the total number of rows in a table, grid, or treegrid."
    },
    "aria-rowindex": {
      "type": "number",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
    },
    "aria-rowspan": {
      "type": "number",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
    },
    "aria-selected": {
      "type": "Booleanish",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates the current \"selected\" state of various widgets."
    },
    "aria-setsize": {
      "type": "number",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
    },
    "aria-sort": {
      "type": "\"none\" | \"ascending\" | \"descending\" | \"other\"",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
    },
    "aria-valuemax": {
      "type": "number",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines the maximum allowed value for a range widget."
    },
    "aria-valuemin": {
      "type": "number",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines the minimum allowed value for a range widget."
    },
    "aria-valuenow": {
      "type": "number",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines the current value for a range widget."
    },
    "aria-valuetext": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
    },
    "as": {
      "type": "\"label\" | \"div\" | \"legend\"",
      "defaultValue": null,
      "required": false,
      "externalProp": false
    },
    "autoCapitalize": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "autoCorrect": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "autoSave": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "contentEditable": {
      "type": "Booleanish | \"inherit\"",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "contextMenu": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "dangerouslySetInnerHTML": {
      "type": "{ __html: string }",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "datatype": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "defaultChecked": {
      "type": "boolean",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "defaultValue": {
      "type": "string | number | readonly string[]",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "dir": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "disabled": {
      "type": "boolean",
      "defaultValue": null,
      "required": false,
      "externalProp": false,
      "description": "Shows the input is disabled."
    },
    "draggable": {
      "type": "Booleanish",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "element": {
      "type": "string",
      "defaultValue": "'LABEL'",
      "required": false,
      "externalProp": false,
      "description": "Overrides the default element name to apply unique styles with the Customization Provider"
    },
    "hidden": {
      "type": "boolean",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "htmlFor": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "You must specify the 'htmlFor' prop to associate the label with an input.\n\n\nYou cannot apply htmlFor to a legend element.\n\n\nYou cannot apply htmlFor to a div element."
    },
    "i18nRequiredLabel": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": false,
      "description": "Label text for the required dot."
    },
    "id": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "inlist": {
      "type": "any",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "inputMode": {
      "type": "| \"text\"\n  | \"none\"\n  | \"search\"\n  | \"tel\"\n  | \"url\"\n  | \"email\"\n  | \"numeric\"\n  | \"decimal\"",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Hints at the type of data that might be entered by the user while editing the element or its contents"
    },
    "is": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Specify that a standard HTML element should behave like a defined custom built-in element"
    },
    "itemID": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "itemProp": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "itemRef": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "itemScope": {
      "type": "boolean",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "itemType": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "key": {
      "type": "Key",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "lang": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "marginBottom": {
      "type": "\"space0\"",
      "defaultValue": null,
      "required": false,
      "externalProp": false,
      "description": "Optionally remove Label's bottom margin."
    },
    "nonce": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onAbort": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onAbortCapture": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onAnimationEnd": {
      "type": "AnimationEventHandler<HTMLLabelElement> | AnimationEventHandler<HTMLLegendElement> | AnimationEventHandler<...>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onAnimationEndCapture": {
      "type": "AnimationEventHandler<HTMLLabelElement> | AnimationEventHandler<HTMLLegendElement> | AnimationEventHandler<...>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onAnimationIteration": {
      "type": "AnimationEventHandler<HTMLLabelElement> | AnimationEventHandler<HTMLLegendElement> | AnimationEventHandler<...>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onAnimationIterationCapture": {
      "type": "AnimationEventHandler<HTMLLabelElement> | AnimationEventHandler<HTMLLegendElement> | AnimationEventHandler<...>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onAnimationStart": {
      "type": "AnimationEventHandler<HTMLLabelElement> | AnimationEventHandler<HTMLLegendElement> | AnimationEventHandler<...>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onAnimationStartCapture": {
      "type": "AnimationEventHandler<HTMLLabelElement> | AnimationEventHandler<HTMLLegendElement> | AnimationEventHandler<...>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onAuxClick": {
      "type": "| MouseEventHandler<HTMLLabelElement>\n  | MouseEventHandler<HTMLLegendElement>\n  | MouseEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onAuxClickCapture": {
      "type": "| MouseEventHandler<HTMLLabelElement>\n  | MouseEventHandler<HTMLLegendElement>\n  | MouseEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onBeforeInput": {
      "type": "| FormEventHandler<HTMLLabelElement>\n  | FormEventHandler<HTMLLegendElement>\n  | FormEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onBeforeInputCapture": {
      "type": "| FormEventHandler<HTMLLabelElement>\n  | FormEventHandler<HTMLLegendElement>\n  | FormEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onBlur": {
      "type": "| FocusEventHandler<HTMLLabelElement>\n  | FocusEventHandler<HTMLLegendElement>\n  | FocusEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onBlurCapture": {
      "type": "| FocusEventHandler<HTMLLabelElement>\n  | FocusEventHandler<HTMLLegendElement>\n  | FocusEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onCanPlay": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onCanPlayCapture": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onCanPlayThrough": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onCanPlayThroughCapture": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onChange": {
      "type": "| FormEventHandler<HTMLLabelElement>\n  | FormEventHandler<HTMLLegendElement>\n  | FormEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onChangeCapture": {
      "type": "| FormEventHandler<HTMLLabelElement>\n  | FormEventHandler<HTMLLegendElement>\n  | FormEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onClick": {
      "type": "| MouseEventHandler<HTMLLabelElement>\n  | MouseEventHandler<HTMLLegendElement>\n  | MouseEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onClickCapture": {
      "type": "| MouseEventHandler<HTMLLabelElement>\n  | MouseEventHandler<HTMLLegendElement>\n  | MouseEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onCompositionEnd": {
      "type": "CompositionEventHandler<HTMLLabelElement> | CompositionEventHandler<HTMLLegendElement> | CompositionEventHandler<...>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onCompositionEndCapture": {
      "type": "CompositionEventHandler<HTMLLabelElement> | CompositionEventHandler<HTMLLegendElement> | CompositionEventHandler<...>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onCompositionStart": {
      "type": "CompositionEventHandler<HTMLLabelElement> | CompositionEventHandler<HTMLLegendElement> | CompositionEventHandler<...>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onCompositionStartCapture": {
      "type": "CompositionEventHandler<HTMLLabelElement> | CompositionEventHandler<HTMLLegendElement> | CompositionEventHandler<...>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onCompositionUpdate": {
      "type": "CompositionEventHandler<HTMLLabelElement> | CompositionEventHandler<HTMLLegendElement> | CompositionEventHandler<...>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onCompositionUpdateCapture": {
      "type": "CompositionEventHandler<HTMLLabelElement> | CompositionEventHandler<HTMLLegendElement> | CompositionEventHandler<...>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onContextMenu": {
      "type": "| MouseEventHandler<HTMLLabelElement>\n  | MouseEventHandler<HTMLLegendElement>\n  | MouseEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onContextMenuCapture": {
      "type": "| MouseEventHandler<HTMLLabelElement>\n  | MouseEventHandler<HTMLLegendElement>\n  | MouseEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onCopy": {
      "type": "ClipboardEventHandler<HTMLLabelElement> | ClipboardEventHandler<HTMLLegendElement> | ClipboardEventHandler<...>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onCopyCapture": {
      "type": "ClipboardEventHandler<HTMLLabelElement> | ClipboardEventHandler<HTMLLegendElement> | ClipboardEventHandler<...>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onCut": {
      "type": "ClipboardEventHandler<HTMLLabelElement> | ClipboardEventHandler<HTMLLegendElement> | ClipboardEventHandler<...>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onCutCapture": {
      "type": "ClipboardEventHandler<HTMLLabelElement> | ClipboardEventHandler<HTMLLegendElement> | ClipboardEventHandler<...>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDoubleClick": {
      "type": "| MouseEventHandler<HTMLLabelElement>\n  | MouseEventHandler<HTMLLegendElement>\n  | MouseEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDoubleClickCapture": {
      "type": "| MouseEventHandler<HTMLLabelElement>\n  | MouseEventHandler<HTMLLegendElement>\n  | MouseEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDrag": {
      "type": "| DragEventHandler<HTMLLabelElement>\n  | DragEventHandler<HTMLLegendElement>\n  | DragEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDragCapture": {
      "type": "| DragEventHandler<HTMLLabelElement>\n  | DragEventHandler<HTMLLegendElement>\n  | DragEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDragEnd": {
      "type": "| DragEventHandler<HTMLLabelElement>\n  | DragEventHandler<HTMLLegendElement>\n  | DragEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDragEndCapture": {
      "type": "| DragEventHandler<HTMLLabelElement>\n  | DragEventHandler<HTMLLegendElement>\n  | DragEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDragEnter": {
      "type": "| DragEventHandler<HTMLLabelElement>\n  | DragEventHandler<HTMLLegendElement>\n  | DragEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDragEnterCapture": {
      "type": "| DragEventHandler<HTMLLabelElement>\n  | DragEventHandler<HTMLLegendElement>\n  | DragEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDragExit": {
      "type": "| DragEventHandler<HTMLLabelElement>\n  | DragEventHandler<HTMLLegendElement>\n  | DragEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDragExitCapture": {
      "type": "| DragEventHandler<HTMLLabelElement>\n  | DragEventHandler<HTMLLegendElement>\n  | DragEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDragLeave": {
      "type": "| DragEventHandler<HTMLLabelElement>\n  | DragEventHandler<HTMLLegendElement>\n  | DragEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDragLeaveCapture": {
      "type": "| DragEventHandler<HTMLLabelElement>\n  | DragEventHandler<HTMLLegendElement>\n  | DragEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDragOver": {
      "type": "| DragEventHandler<HTMLLabelElement>\n  | DragEventHandler<HTMLLegendElement>\n  | DragEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDragOverCapture": {
      "type": "| DragEventHandler<HTMLLabelElement>\n  | DragEventHandler<HTMLLegendElement>\n  | DragEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDragStart": {
      "type": "| DragEventHandler<HTMLLabelElement>\n  | DragEventHandler<HTMLLegendElement>\n  | DragEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDragStartCapture": {
      "type": "| DragEventHandler<HTMLLabelElement>\n  | DragEventHandler<HTMLLegendElement>\n  | DragEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDrop": {
      "type": "| DragEventHandler<HTMLLabelElement>\n  | DragEventHandler<HTMLLegendElement>\n  | DragEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDropCapture": {
      "type": "| DragEventHandler<HTMLLabelElement>\n  | DragEventHandler<HTMLLegendElement>\n  | DragEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDurationChange": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDurationChangeCapture": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onEmptied": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onEmptiedCapture": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onEncrypted": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onEncryptedCapture": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onEnded": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onEndedCapture": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onError": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onErrorCapture": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onFocus": {
      "type": "| FocusEventHandler<HTMLLabelElement>\n  | FocusEventHandler<HTMLLegendElement>\n  | FocusEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onFocusCapture": {
      "type": "| FocusEventHandler<HTMLLabelElement>\n  | FocusEventHandler<HTMLLegendElement>\n  | FocusEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onGotPointerCapture": {
      "type": "| PointerEventHandler<HTMLLabelElement>\n  | PointerEventHandler<HTMLLegendElement>\n  | PointerEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onGotPointerCaptureCapture": {
      "type": "| PointerEventHandler<HTMLLabelElement>\n  | PointerEventHandler<HTMLLegendElement>\n  | PointerEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onInput": {
      "type": "| FormEventHandler<HTMLLabelElement>\n  | FormEventHandler<HTMLLegendElement>\n  | FormEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onInputCapture": {
      "type": "| FormEventHandler<HTMLLabelElement>\n  | FormEventHandler<HTMLLegendElement>\n  | FormEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onInvalid": {
      "type": "| FormEventHandler<HTMLLabelElement>\n  | FormEventHandler<HTMLLegendElement>\n  | FormEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onInvalidCapture": {
      "type": "| FormEventHandler<HTMLLabelElement>\n  | FormEventHandler<HTMLLegendElement>\n  | FormEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onKeyDown": {
      "type": "KeyboardEventHandler<HTMLLabelElement> | KeyboardEventHandler<HTMLLegendElement> | KeyboardEventHandler<...>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onKeyDownCapture": {
      "type": "KeyboardEventHandler<HTMLLabelElement> | KeyboardEventHandler<HTMLLegendElement> | KeyboardEventHandler<...>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onKeyPress": {
      "type": "KeyboardEventHandler<HTMLLabelElement> | KeyboardEventHandler<HTMLLegendElement> | KeyboardEventHandler<...>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onKeyPressCapture": {
      "type": "KeyboardEventHandler<HTMLLabelElement> | KeyboardEventHandler<HTMLLegendElement> | KeyboardEventHandler<...>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onKeyUp": {
      "type": "KeyboardEventHandler<HTMLLabelElement> | KeyboardEventHandler<HTMLLegendElement> | KeyboardEventHandler<...>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onKeyUpCapture": {
      "type": "KeyboardEventHandler<HTMLLabelElement> | KeyboardEventHandler<HTMLLegendElement> | KeyboardEventHandler<...>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onLoad": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onLoadCapture": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onLoadedData": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onLoadedDataCapture": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onLoadedMetadata": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onLoadedMetadataCapture": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onLoadStart": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onLoadStartCapture": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onLostPointerCapture": {
      "type": "| PointerEventHandler<HTMLLabelElement>\n  | PointerEventHandler<HTMLLegendElement>\n  | PointerEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onLostPointerCaptureCapture": {
      "type": "| PointerEventHandler<HTMLLabelElement>\n  | PointerEventHandler<HTMLLegendElement>\n  | PointerEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onMouseDown": {
      "type": "| MouseEventHandler<HTMLLabelElement>\n  | MouseEventHandler<HTMLLegendElement>\n  | MouseEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onMouseDownCapture": {
      "type": "| MouseEventHandler<HTMLLabelElement>\n  | MouseEventHandler<HTMLLegendElement>\n  | MouseEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onMouseEnter": {
      "type": "| MouseEventHandler<HTMLLabelElement>\n  | MouseEventHandler<HTMLLegendElement>\n  | MouseEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onMouseLeave": {
      "type": "| MouseEventHandler<HTMLLabelElement>\n  | MouseEventHandler<HTMLLegendElement>\n  | MouseEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onMouseMove": {
      "type": "| MouseEventHandler<HTMLLabelElement>\n  | MouseEventHandler<HTMLLegendElement>\n  | MouseEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onMouseMoveCapture": {
      "type": "| MouseEventHandler<HTMLLabelElement>\n  | MouseEventHandler<HTMLLegendElement>\n  | MouseEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onMouseOut": {
      "type": "| MouseEventHandler<HTMLLabelElement>\n  | MouseEventHandler<HTMLLegendElement>\n  | MouseEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onMouseOutCapture": {
      "type": "| MouseEventHandler<HTMLLabelElement>\n  | MouseEventHandler<HTMLLegendElement>\n  | MouseEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onMouseOver": {
      "type": "| MouseEventHandler<HTMLLabelElement>\n  | MouseEventHandler<HTMLLegendElement>\n  | MouseEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onMouseOverCapture": {
      "type": "| MouseEventHandler<HTMLLabelElement>\n  | MouseEventHandler<HTMLLegendElement>\n  | MouseEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onMouseUp": {
      "type": "| MouseEventHandler<HTMLLabelElement>\n  | MouseEventHandler<HTMLLegendElement>\n  | MouseEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onMouseUpCapture": {
      "type": "| MouseEventHandler<HTMLLabelElement>\n  | MouseEventHandler<HTMLLegendElement>\n  | MouseEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPaste": {
      "type": "ClipboardEventHandler<HTMLLabelElement> | ClipboardEventHandler<HTMLLegendElement> | ClipboardEventHandler<...>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPasteCapture": {
      "type": "ClipboardEventHandler<HTMLLabelElement> | ClipboardEventHandler<HTMLLegendElement> | ClipboardEventHandler<...>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPause": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPauseCapture": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPlay": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPlayCapture": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPlaying": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPlayingCapture": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerCancel": {
      "type": "| PointerEventHandler<HTMLLabelElement>\n  | PointerEventHandler<HTMLLegendElement>\n  | PointerEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerCancelCapture": {
      "type": "| PointerEventHandler<HTMLLabelElement>\n  | PointerEventHandler<HTMLLegendElement>\n  | PointerEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerDown": {
      "type": "| PointerEventHandler<HTMLLabelElement>\n  | PointerEventHandler<HTMLLegendElement>\n  | PointerEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerDownCapture": {
      "type": "| PointerEventHandler<HTMLLabelElement>\n  | PointerEventHandler<HTMLLegendElement>\n  | PointerEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerEnter": {
      "type": "| PointerEventHandler<HTMLLabelElement>\n  | PointerEventHandler<HTMLLegendElement>\n  | PointerEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerEnterCapture": {
      "type": "| PointerEventHandler<HTMLLabelElement>\n  | PointerEventHandler<HTMLLegendElement>\n  | PointerEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerLeave": {
      "type": "| PointerEventHandler<HTMLLabelElement>\n  | PointerEventHandler<HTMLLegendElement>\n  | PointerEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerLeaveCapture": {
      "type": "| PointerEventHandler<HTMLLabelElement>\n  | PointerEventHandler<HTMLLegendElement>\n  | PointerEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerMove": {
      "type": "| PointerEventHandler<HTMLLabelElement>\n  | PointerEventHandler<HTMLLegendElement>\n  | PointerEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerMoveCapture": {
      "type": "| PointerEventHandler<HTMLLabelElement>\n  | PointerEventHandler<HTMLLegendElement>\n  | PointerEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerOut": {
      "type": "| PointerEventHandler<HTMLLabelElement>\n  | PointerEventHandler<HTMLLegendElement>\n  | PointerEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerOutCapture": {
      "type": "| PointerEventHandler<HTMLLabelElement>\n  | PointerEventHandler<HTMLLegendElement>\n  | PointerEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerOver": {
      "type": "| PointerEventHandler<HTMLLabelElement>\n  | PointerEventHandler<HTMLLegendElement>\n  | PointerEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerOverCapture": {
      "type": "| PointerEventHandler<HTMLLabelElement>\n  | PointerEventHandler<HTMLLegendElement>\n  | PointerEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerUp": {
      "type": "| PointerEventHandler<HTMLLabelElement>\n  | PointerEventHandler<HTMLLegendElement>\n  | PointerEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerUpCapture": {
      "type": "| PointerEventHandler<HTMLLabelElement>\n  | PointerEventHandler<HTMLLegendElement>\n  | PointerEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onProgress": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onProgressCapture": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onRateChange": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onRateChangeCapture": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onReset": {
      "type": "| FormEventHandler<HTMLLabelElement>\n  | FormEventHandler<HTMLLegendElement>\n  | FormEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onResetCapture": {
      "type": "| FormEventHandler<HTMLLabelElement>\n  | FormEventHandler<HTMLLegendElement>\n  | FormEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onResize": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onResizeCapture": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onScroll": {
      "type": "| UIEventHandler<HTMLLabelElement>\n  | UIEventHandler<HTMLLegendElement>\n  | UIEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onScrollCapture": {
      "type": "| UIEventHandler<HTMLLabelElement>\n  | UIEventHandler<HTMLLegendElement>\n  | UIEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onSeeked": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onSeekedCapture": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onSeeking": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onSeekingCapture": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onSelect": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onSelectCapture": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onStalled": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onStalledCapture": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onSubmit": {
      "type": "| FormEventHandler<HTMLLabelElement>\n  | FormEventHandler<HTMLLegendElement>\n  | FormEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onSubmitCapture": {
      "type": "| FormEventHandler<HTMLLabelElement>\n  | FormEventHandler<HTMLLegendElement>\n  | FormEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onSuspend": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onSuspendCapture": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onTimeUpdate": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onTimeUpdateCapture": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onTouchCancel": {
      "type": "| TouchEventHandler<HTMLLabelElement>\n  | TouchEventHandler<HTMLLegendElement>\n  | TouchEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onTouchCancelCapture": {
      "type": "| TouchEventHandler<HTMLLabelElement>\n  | TouchEventHandler<HTMLLegendElement>\n  | TouchEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onTouchEnd": {
      "type": "| TouchEventHandler<HTMLLabelElement>\n  | TouchEventHandler<HTMLLegendElement>\n  | TouchEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onTouchEndCapture": {
      "type": "| TouchEventHandler<HTMLLabelElement>\n  | TouchEventHandler<HTMLLegendElement>\n  | TouchEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onTouchMove": {
      "type": "| TouchEventHandler<HTMLLabelElement>\n  | TouchEventHandler<HTMLLegendElement>\n  | TouchEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onTouchMoveCapture": {
      "type": "| TouchEventHandler<HTMLLabelElement>\n  | TouchEventHandler<HTMLLegendElement>\n  | TouchEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onTouchStart": {
      "type": "| TouchEventHandler<HTMLLabelElement>\n  | TouchEventHandler<HTMLLegendElement>\n  | TouchEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onTouchStartCapture": {
      "type": "| TouchEventHandler<HTMLLabelElement>\n  | TouchEventHandler<HTMLLegendElement>\n  | TouchEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onTransitionEnd": {
      "type": "TransitionEventHandler<HTMLLabelElement> | TransitionEventHandler<HTMLLegendElement> | TransitionEventHandler<...>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onTransitionEndCapture": {
      "type": "TransitionEventHandler<HTMLLabelElement> | TransitionEventHandler<HTMLLegendElement> | TransitionEventHandler<...>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onVolumeChange": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onVolumeChangeCapture": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onWaiting": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onWaitingCapture": {
      "type": "| ReactEventHandler<HTMLLabelElement>\n  | ReactEventHandler<HTMLLegendElement>\n  | ReactEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onWheel": {
      "type": "| WheelEventHandler<HTMLLabelElement>\n  | WheelEventHandler<HTMLLegendElement>\n  | WheelEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onWheelCapture": {
      "type": "| WheelEventHandler<HTMLLabelElement>\n  | WheelEventHandler<HTMLLegendElement>\n  | WheelEventHandler<HTMLDivElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "placeholder": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "prefix": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "property": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "radioGroup": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "required": {
      "type": "boolean",
      "defaultValue": null,
      "required": false,
      "externalProp": false,
      "description": "Shows the input is required."
    },
    "resource": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "results": {
      "type": "number",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "role": {
      "type": "AriaRole",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "security": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "slot": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "spellCheck": {
      "type": "Booleanish",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "suppressContentEditableWarning": {
      "type": "boolean",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "suppressHydrationWarning": {
      "type": "boolean",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "tabIndex": {
      "type": "number",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "title": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "translate": {
      "type": "\"yes\" | \"no\"",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "typeof": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "unselectable": {
      "type": "\"on\" | \"off\"",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "variant": {
      "type": "LabelVariants",
      "defaultValue": null,
      "required": false,
      "externalProp": false
    },
    "vocab": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    }
  },
  "RequiredDot": {
    "about": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "accessKey": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "aria-activedescendant": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
    },
    "aria-atomic": {
      "type": "Booleanish",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
    },
    "aria-autocomplete": {
      "type": "\"list\" | \"none\" | \"inline\" | \"both\"",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
    },
    "aria-busy": {
      "type": "Booleanish",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
    },
    "aria-checked": {
      "type": "boolean | \"true\" | \"false\" | \"mixed\"",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
    },
    "aria-colcount": {
      "type": "number",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines the total number of columns in a table, grid, or treegrid."
    },
    "aria-colindex": {
      "type": "number",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
    },
    "aria-colspan": {
      "type": "number",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
    },
    "aria-controls": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
    },
    "aria-current": {
      "type": "| boolean\n  | \"time\"\n  | \"true\"\n  | \"false\"\n  | \"page\"\n  | \"step\"\n  | \"location\"\n  | \"date\"",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates the element that represents the current item within a container or set of related elements."
    },
    "aria-describedby": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Identifies the element (or elements) that describes the object."
    },
    "aria-details": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Identifies the element that provides a detailed, extended description for the object."
    },
    "aria-disabled": {
      "type": "Booleanish",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
    },
    "aria-dropeffect": {
      "type": "\"link\" | \"none\" | \"copy\" | \"execute\" | \"move\" | \"popup\"",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates what functions can be performed when a dragged object is released on the drop target."
    },
    "aria-errormessage": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Identifies the element that provides an error message for the object."
    },
    "aria-expanded": {
      "type": "Booleanish",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
    },
    "aria-flowto": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
    },
    "aria-grabbed": {
      "type": "Booleanish",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
    },
    "aria-haspopup": {
      "type": "| boolean\n  | \"dialog\"\n  | \"menu\"\n  | \"true\"\n  | \"false\"\n  | \"grid\"\n  | \"listbox\"\n  | \"tree\"",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
    },
    "aria-hidden": {
      "type": "Booleanish",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates whether the element is exposed to an accessibility API."
    },
    "aria-invalid": {
      "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates the entered value does not conform to the format expected by the application."
    },
    "aria-keyshortcuts": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
    },
    "aria-label": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines a string value that labels the current element."
    },
    "aria-labelledby": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Identifies the element (or elements) that labels the current element."
    },
    "aria-level": {
      "type": "number",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines the hierarchical level of an element within a structure."
    },
    "aria-live": {
      "type": "\"off\" | \"assertive\" | \"polite\"",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
    },
    "aria-modal": {
      "type": "Booleanish",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates whether an element is modal when displayed."
    },
    "aria-multiline": {
      "type": "Booleanish",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
    },
    "aria-multiselectable": {
      "type": "Booleanish",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates that the user may select more than one item from the current selectable descendants."
    },
    "aria-orientation": {
      "type": "\"horizontal\" | \"vertical\"",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
    },
    "aria-owns": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
    },
    "aria-placeholder": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
    },
    "aria-posinset": {
      "type": "number",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
    },
    "aria-pressed": {
      "type": "boolean | \"true\" | \"false\" | \"mixed\"",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates the current \"pressed\" state of toggle buttons."
    },
    "aria-readonly": {
      "type": "Booleanish",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates that the element is not editable, but is otherwise operable."
    },
    "aria-relevant": {
      "type": "| \"text\"\n  | \"additions\"\n  | \"additions removals\"\n  | \"additions text\"\n  | \"all\"\n  | \"removals\"\n  | \"removals additions\"\n  | \"removals text\"\n  | \"text additions\"\n  | \"text removals\"",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
    },
    "aria-required": {
      "type": "Booleanish",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates that user input is required on the element before a form may be submitted."
    },
    "aria-roledescription": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines a human-readable, author-localized description for the role of an element."
    },
    "aria-rowcount": {
      "type": "number",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines the total number of rows in a table, grid, or treegrid."
    },
    "aria-rowindex": {
      "type": "number",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
    },
    "aria-rowspan": {
      "type": "number",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
    },
    "aria-selected": {
      "type": "Booleanish",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates the current \"selected\" state of various widgets."
    },
    "aria-setsize": {
      "type": "number",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
    },
    "aria-sort": {
      "type": "\"none\" | \"ascending\" | \"descending\" | \"other\"",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
    },
    "aria-valuemax": {
      "type": "number",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines the maximum allowed value for a range widget."
    },
    "aria-valuemin": {
      "type": "number",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines the minimum allowed value for a range widget."
    },
    "aria-valuenow": {
      "type": "number",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines the current value for a range widget."
    },
    "aria-valuetext": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
    },
    "autoCapitalize": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "autoCorrect": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "autoSave": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "contentEditable": {
      "type": "Booleanish | \"inherit\"",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "contextMenu": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "dangerouslySetInnerHTML": {
      "type": "{ __html: string }",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "datatype": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "defaultChecked": {
      "type": "boolean",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "defaultValue": {
      "type": "string | number | readonly string[]",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "dir": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "draggable": {
      "type": "Booleanish",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "element": {
      "type": "string",
      "defaultValue": "'REQUIRED_DOT'",
      "required": false,
      "externalProp": false,
      "description": "Overrides the default element name to apply unique styles with the Customization Provider"
    },
    "hidden": {
      "type": "boolean",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "i18nLabel": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": false
    },
    "id": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "inlist": {
      "type": "any",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "inputMode": {
      "type": "| \"text\"\n  | \"none\"\n  | \"search\"\n  | \"tel\"\n  | \"url\"\n  | \"email\"\n  | \"numeric\"\n  | \"decimal\"",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Hints at the type of data that might be entered by the user while editing the element or its contents"
    },
    "is": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true,
      "description": "Specify that a standard HTML element should behave like a defined custom built-in element"
    },
    "itemID": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "itemProp": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "itemRef": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "itemScope": {
      "type": "boolean",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "itemType": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "key": {
      "type": "Key",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "lang": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "nonce": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onAbort": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onAbortCapture": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onAnimationEnd": {
      "type": "AnimationEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onAnimationEndCapture": {
      "type": "AnimationEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onAnimationIteration": {
      "type": "AnimationEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onAnimationIterationCapture": {
      "type": "AnimationEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onAnimationStart": {
      "type": "AnimationEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onAnimationStartCapture": {
      "type": "AnimationEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onAuxClick": {
      "type": "MouseEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onAuxClickCapture": {
      "type": "MouseEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onBeforeInput": {
      "type": "FormEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onBeforeInputCapture": {
      "type": "FormEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onBlur": {
      "type": "FocusEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onBlurCapture": {
      "type": "FocusEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onCanPlay": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onCanPlayCapture": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onCanPlayThrough": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onCanPlayThroughCapture": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onChange": {
      "type": "FormEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onChangeCapture": {
      "type": "FormEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onClick": {
      "type": "MouseEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onClickCapture": {
      "type": "MouseEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onCompositionEnd": {
      "type": "CompositionEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onCompositionEndCapture": {
      "type": "CompositionEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onCompositionStart": {
      "type": "CompositionEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onCompositionStartCapture": {
      "type": "CompositionEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onCompositionUpdate": {
      "type": "CompositionEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onCompositionUpdateCapture": {
      "type": "CompositionEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onContextMenu": {
      "type": "MouseEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onContextMenuCapture": {
      "type": "MouseEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onCopy": {
      "type": "ClipboardEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onCopyCapture": {
      "type": "ClipboardEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onCut": {
      "type": "ClipboardEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onCutCapture": {
      "type": "ClipboardEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDoubleClick": {
      "type": "MouseEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDoubleClickCapture": {
      "type": "MouseEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDrag": {
      "type": "DragEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDragCapture": {
      "type": "DragEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDragEnd": {
      "type": "DragEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDragEndCapture": {
      "type": "DragEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDragEnter": {
      "type": "DragEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDragEnterCapture": {
      "type": "DragEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDragExit": {
      "type": "DragEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDragExitCapture": {
      "type": "DragEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDragLeave": {
      "type": "DragEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDragLeaveCapture": {
      "type": "DragEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDragOver": {
      "type": "DragEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDragOverCapture": {
      "type": "DragEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDragStart": {
      "type": "DragEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDragStartCapture": {
      "type": "DragEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDrop": {
      "type": "DragEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDropCapture": {
      "type": "DragEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDurationChange": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onDurationChangeCapture": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onEmptied": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onEmptiedCapture": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onEncrypted": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onEncryptedCapture": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onEnded": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onEndedCapture": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onError": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onErrorCapture": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onFocus": {
      "type": "FocusEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onFocusCapture": {
      "type": "FocusEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onGotPointerCapture": {
      "type": "PointerEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onGotPointerCaptureCapture": {
      "type": "PointerEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onInput": {
      "type": "FormEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onInputCapture": {
      "type": "FormEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onInvalid": {
      "type": "FormEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onInvalidCapture": {
      "type": "FormEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onKeyDown": {
      "type": "KeyboardEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onKeyDownCapture": {
      "type": "KeyboardEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onKeyPress": {
      "type": "KeyboardEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onKeyPressCapture": {
      "type": "KeyboardEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onKeyUp": {
      "type": "KeyboardEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onKeyUpCapture": {
      "type": "KeyboardEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onLoad": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onLoadCapture": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onLoadedData": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onLoadedDataCapture": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onLoadedMetadata": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onLoadedMetadataCapture": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onLoadStart": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onLoadStartCapture": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onLostPointerCapture": {
      "type": "PointerEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onLostPointerCaptureCapture": {
      "type": "PointerEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onMouseDown": {
      "type": "MouseEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onMouseDownCapture": {
      "type": "MouseEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onMouseEnter": {
      "type": "MouseEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onMouseLeave": {
      "type": "MouseEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onMouseMove": {
      "type": "MouseEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onMouseMoveCapture": {
      "type": "MouseEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onMouseOut": {
      "type": "MouseEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onMouseOutCapture": {
      "type": "MouseEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onMouseOver": {
      "type": "MouseEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onMouseOverCapture": {
      "type": "MouseEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onMouseUp": {
      "type": "MouseEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onMouseUpCapture": {
      "type": "MouseEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPaste": {
      "type": "ClipboardEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPasteCapture": {
      "type": "ClipboardEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPause": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPauseCapture": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPlay": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPlayCapture": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPlaying": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPlayingCapture": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerCancel": {
      "type": "PointerEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerCancelCapture": {
      "type": "PointerEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerDown": {
      "type": "PointerEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerDownCapture": {
      "type": "PointerEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerEnter": {
      "type": "PointerEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerEnterCapture": {
      "type": "PointerEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerLeave": {
      "type": "PointerEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerLeaveCapture": {
      "type": "PointerEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerMove": {
      "type": "PointerEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerMoveCapture": {
      "type": "PointerEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerOut": {
      "type": "PointerEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerOutCapture": {
      "type": "PointerEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerOver": {
      "type": "PointerEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerOverCapture": {
      "type": "PointerEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerUp": {
      "type": "PointerEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onPointerUpCapture": {
      "type": "PointerEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onProgress": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onProgressCapture": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onRateChange": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onRateChangeCapture": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onReset": {
      "type": "FormEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onResetCapture": {
      "type": "FormEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onResize": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onResizeCapture": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onScroll": {
      "type": "UIEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onScrollCapture": {
      "type": "UIEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onSeeked": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onSeekedCapture": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onSeeking": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onSeekingCapture": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onSelect": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onSelectCapture": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onStalled": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onStalledCapture": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onSubmit": {
      "type": "FormEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onSubmitCapture": {
      "type": "FormEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onSuspend": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onSuspendCapture": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onTimeUpdate": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onTimeUpdateCapture": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onTouchCancel": {
      "type": "TouchEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onTouchCancelCapture": {
      "type": "TouchEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onTouchEnd": {
      "type": "TouchEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onTouchEndCapture": {
      "type": "TouchEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onTouchMove": {
      "type": "TouchEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onTouchMoveCapture": {
      "type": "TouchEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onTouchStart": {
      "type": "TouchEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onTouchStartCapture": {
      "type": "TouchEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onTransitionEnd": {
      "type": "TransitionEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onTransitionEndCapture": {
      "type": "TransitionEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onVolumeChange": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onVolumeChangeCapture": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onWaiting": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onWaitingCapture": {
      "type": "ReactEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onWheel": {
      "type": "WheelEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "onWheelCapture": {
      "type": "WheelEventHandler<HTMLSpanElement>",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "placeholder": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "prefix": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "property": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "radioGroup": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "resource": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "results": {
      "type": "number",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "role": {
      "type": "AriaRole",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "security": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "slot": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "spellCheck": {
      "type": "Booleanish",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "suppressContentEditableWarning": {
      "type": "boolean",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "suppressHydrationWarning": {
      "type": "boolean",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "tabIndex": {
      "type": "number",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "title": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "translate": {
      "type": "\"yes\" | \"no\"",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "typeof": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "unselectable": {
      "type": "\"on\" | \"off\"",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    },
    "vocab": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": true
    }
  }
}
