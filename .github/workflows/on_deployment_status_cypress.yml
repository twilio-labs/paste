name: Cypress Deployment Checks

on:
  deployment_status:

jobs:
  # run this job first to create a single timestamped id for all percy batches on parallel machines
  percy-batch-id:
    runs-on: ubuntu-latest
    # persist job results to other jobs in the workflow
    outputs:
      result: ${{ steps.percy-batch-id.outputs.result }}
    steps:
      # persist step results to other steps in the job
      - name: Create Percy Batch ID
        id: percy-batch-id
        # adding a timestamp makes the batch id more unique for re-runs
        run: echo "result=${{ github.run_id }}-$(date +%s)" >> $GITHUB_OUTPUT

  cypress:
    name: Website tests
    runs-on: ubuntu-latest
    needs: percy-batch-id
    if: github.event_name == 'deployment_status' && github.event.deployment_status.state == 'success' && startsWith(github.event.deployment_status.environment_url, 'https://paste-docs')
    strategy:
      fail-fast: false
      matrix:
        containers: [1, 2, 3]
    env:
      CYPRESS_CACHE_FOLDER: ./node_modules/cypress
      CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
      USE_CYPRESS_VRT: false

    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"

      - name: Show default environment variables
        run: |
          echo "The job_id is: $GITHUB_JOB"   # reference the default environment variables
          echo "The id of this action is: $GITHUB_ACTION"   # reference the default environment variables
          echo "The run id is: $GITHUB_RUN_ID"
          echo "The GitHub Actor's username is: $GITHUB_ACTOR"
          echo "GitHub SHA: $GITHUB_SHA"

      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Node.js 20.5
        uses: actions/setup-node@v3
        with:
          node-version: 20.5.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: Percy Batch ID
        run: echo "${{ needs.percy-batch-id.outputs.result }}"

      - name: Load Yarn cache
        uses: actions/cache@v3
        id: yarn_cache_id
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn

      - name: Node modules cache
        uses: actions/cache@v3
        id: node_modules_cache_id
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install Dependencies
        if: steps.yarn_cache_id.outputs.cache-hit != 'true' || steps.node_modules_cache_id.outputs.cache-hit != 'true'
        run: yarn install --immutable

      - name: Cypress run without site VRT
        uses: cypress-io/github-action@v4
        if: ${{ !contains(github.event.pull_request.labels.*.name, 'üïµüèª‚Äç‚ôÄÔ∏è Run website visual regression') }}
        with:
          record: true
          parallel: true
          group: "Paste Actions Parallel"
          config: baseUrl=${{ github.event.deployment_status.environment_url }}
        env:
          CYPRESS_BASE_URL: ${{ github.event.deployment_status.environment_url }}

      - name: Cypress run with site VRT
        uses: cypress-io/github-action@v4
        if: ${{ contains(github.event.pull_request.labels.*.name, 'üïµüèª‚Äç‚ôÄÔ∏è Run website visual regression') }}
        with:
          record: true
          parallel: true
          group: "Paste Actions with VRT Parallel"
          config: baseUrl=${{ github.event.deployment_status.environment_url }}
          # enabled percy to run cypress for VRT
          command-prefix: "percy exec --parallel -- npx"
        env:
          USE_CYPRESS_VRT: true
          PERCY_PARALLEL_NONCE: ${{ needs.percy-batch-id.outputs.result }}
          PERCY_PARALLEL_TOTAL: 3
          CYPRESS_BASE_URL: ${{ github.event.deployment_status.environment_url }}

      - name: Cypress run with site VRT on main
        uses: cypress-io/github-action@v4
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          record: true
          parallel: true
          group: "Paste Actions with VRT Parallel"
          config: baseUrl=${{ github.event.deployment_status.environment_url }}
          # enabled percy to run cypress for VRT
          command-prefix: "percy exec --parallel -- npx"
        env:
          USE_CYPRESS_VRT: true
          PERCY_PARALLEL_NONCE: ${{ needs.percy-batch-id.outputs.result }}
          PERCY_PARALLEL_TOTAL: 3
          CYPRESS_BASE_URL: ${{ github.event.deployment_status.environment_url }}
