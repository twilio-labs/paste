# name: PR Checks

# on: pull_request

# jobs:
#   build_and_types:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node-version: [12.18.x]
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-node@v1
#         with:
#           node-version: ${{ matrix.node-version }}
#       - name: Get yarn cache
#         id: yarn-cache
#         run: echo "::set-output name=dir::$(yarn cache dir)"
#       - uses: actions/cache@v1
#         with:
#           path: ${{ steps.yarn-cache.outputs.dir }}
#           key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#           restore-keys: |
#             ${{ runner.os }}-yarn-
#       - name: restore lerna
#         uses: actions/cache@master
#         with:
#           path: |
#             node_modules
#             */*/node_modules
#           key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
#       - name: Install dependencies
#         run: yarn install
#       - name: Bootstrap repository
#         run: yarn bootstrap
#       - name: Build packages
#         run: yarn build
#       - name: Run type checker
#         run: yarn type-check
#   build_and_eslint:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node-version: [12.18.x]
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-node@v1
#         with:
#           node-version: ${{ matrix.node-version }}
#       - name: Get yarn cache
#         id: yarn-cache
#         run: echo "::set-output name=dir::$(yarn cache dir)"
#       - uses: actions/cache@v1
#         with:
#           path: ${{ steps.yarn-cache.outputs.dir }}
#           key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#           restore-keys: |
#             ${{ runner.os }}-yarn-
#       - name: restore lerna
#         uses: actions/cache@master
#         with:
#           path: |
#             node_modules
#             */*/node_modules
#           key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
#       - name: Install dependencies
#         run: yarn install
#       - name: Bootstrap repository
#         run: yarn bootstrap
#       - name: Build packages
#         run: yarn build
#       - name: Run eslint
#         run: yarn lint
#   build_and_tests:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node-version: [12.18.x]
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-node@v1
#         with:
#           node-version: ${{ matrix.node-version }}
#       - name: Get yarn cache
#         id: yarn-cache
#         run: echo "::set-output name=dir::$(yarn cache dir)"
#       - uses: actions/cache@v1
#         with:
#           path: ${{ steps.yarn-cache.outputs.dir }}
#           key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#           restore-keys: |
#             ${{ runner.os }}-yarn-
#       - name: restore lerna
#         uses: actions/cache@master
#         with:
#           path: |
#             node_modules
#             */*/node_modules
#           key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
#       - name: Install dependencies
#         run: yarn install
#       - name: Bootstrap repository
#         run: yarn bootstrap
#       - name: Build packages
#         run: yarn build
#       - name: Run tests
#         run: yarn test
#   build_and_prettier:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node-version: [12.18.x]
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-node@v1
#         with:
#           node-version: ${{ matrix.node-version }}
#       - name: Get yarn cache
#         id: yarn-cache
#         run: echo "::set-output name=dir::$(yarn cache dir)"
#       - uses: actions/cache@v1
#         with:
#           path: ${{ steps.yarn-cache.outputs.dir }}
#           key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#           restore-keys: |
#             ${{ runner.os }}-yarn-
#       - name: restore lerna
#         uses: actions/cache@master
#         with:
#           path: |
#             node_modules
#             */*/node_modules
#           key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
#       - name: Install dependencies
#         run: yarn install
#       - name: Bootstrap repository
#         run: yarn bootstrap
#       - name: Build packages
#         run: yarn build
#       - name: Run prettier
#         run: yarn prettier
#   build_and_applitools:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node-version: [12.18.x]
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-node@v1
#         with:
#           node-version: ${{ matrix.node-version }}
#       - name: Get yarn cache
#         id: yarn-cache
#         run: echo "::set-output name=dir::$(yarn cache dir)"
#       - uses: actions/cache@v1
#         with:
#           path: ${{ steps.yarn-cache.outputs.dir }}
#           key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#           restore-keys: |
#             ${{ runner.os }}-yarn-
#       - name: restore lerna
#         uses: actions/cache@master
#         with:
#           path: |
#             node_modules
#             */*/node_modules
#           key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
#       - name: Install dependencies
#         run: yarn install
#       - name: Bootstrap repository
#         run: yarn bootstrap
#       - name: Build packages
#         run: yarn build
#       - name: Run applitools eyes-storybook
#         run: yarn test:vrt
#         env:
#           APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
#           GITHUB_HEAD_SHA: ${{ github.event.pull_request.head.sha }}
