{
  "PopoverStateReturn": {},
  "PopoverContainer": {
    "state": {
      "type": "PopoverStateReturn",
      "defaultValue": null,
      "required": false,
      "externalProp": false
    }
  },
  "Popover": {
    "aria-label": {
      "type": "string",
      "defaultValue": null,
      "required": true,
      "externalProp": false,
      "description": "Required label for this Popover component. Titles the entire popover context for screen readers."
    },
    "element": {
      "type": "any",
      "defaultValue": "'POPOVER'",
      "required": false,
      "externalProp": false,
      "description": "Overrides the default element name to apply unique styles with the Customization Provider"
    },
    "i18nDismissLabel": {
      "type": "string",
      "defaultValue": "'Close popover'",
      "required": false,
      "externalProp": false,
      "description": "Accessible label for the dismiss button in the Popover."
    },
    "initialFocusRef": {
      "type": "RefObject<any>",
      "defaultValue": null,
      "required": false,
      "externalProp": false,
      "description": "A ref to an interactive element that recieves focus when the Popover opens."
    },
    "width": {
      "type": "any",
      "defaultValue": null,
      "required": false,
      "externalProp": false
    }
  },
  "PopoverButton": {
    "element": {
      "type": "any",
      "defaultValue": "'POPOVER_BUTTON'",
      "required": false,
      "externalProp": false,
      "description": "Overrides the default element name to apply unique styles with the Customization Provider"
    },
    "id": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": false
    },
    "toggle": {
      "type": "() => void",
      "defaultValue": null,
      "required": false,
      "externalProp": false
    }
  },
  "PopoverBadgeButton": {
    "element": {
      "type": "any",
      "defaultValue": "'POPOVER_BADGE'",
      "required": false,
      "externalProp": false,
      "description": "Overrides the default element name to apply unique styles with the Customization Provider"
    },
    "id": {
      "type": "string",
      "defaultValue": null,
      "required": false,
      "externalProp": false
    },
    "toggle": {
      "type": "() => void",
      "defaultValue": null,
      "required": false,
      "externalProp": false
    }
  }
}
