import * as lodash from 'lodash';

const supportedBoxProps = [
  'margin',
  'm',
  'marginTop',
  'mt',
  'marginRight',
  'mr',
  'marginBottom',
  'mb',
  'marginLeft',
  'ml',
  'marginX',
  'mx',
  'marginY',
  'my',
  'padding',
  'p',
  'paddingTop',
  'pt',
  'paddingRight',
  'pr',
  'paddingBottom',
  'pb',
  'paddingLeft',
  'pl',
  'paddingX',
  'px',
  'paddingY',
  'py',
  'width',
  'height',
  'display',
  'minWidth',
  'minHeight',
  'maxWidth',
  'maxHeight',
  'size',
  'verticalAlign',
  'overflow',
  'overflowX',
  'overflowY',
  'alignItems',
  'alignContent',
  'justifyItems',
  'justifyContent',
  'flexWrap',
  'flexDirection',
  'flex',
  'flexGrow',
  'flexShrink',
  'flexBasis',
  'justifySelf',
  'alignSelf',
  'order',
  'backgroundImage',
  'backgroundSize',
  'backgroundPosition',
  'backgroundRepeat',
  'backgroundColor',
  'border',
  'borderWidth',
  'borderStyle',
  'borderColor',
  'borderRadius',
  'borderTop',
  'borderTopWidth',
  'borderTopStyle',
  'borderTopColor',
  'borderTopLeftRadius',
  'borderTopRightRadius',
  'borderRight',
  'borderRightWidth',
  'borderRightStyle',
  'borderRightColor',
  'borderBottom',
  'borderBottomWidth',
  'borderBottomStyle',
  'borderBottomColor',
  'borderBottomLeftRadius',
  'borderBottomRightRadius',
  'borderLeft',
  'borderLeftWidth',
  'borderLeftStyle',
  'borderLeftColor',
  'borderX',
  'borderY',
  'borderColor',
  'boxShadow',
  'zIndex',
] as const;

type Exceptions = typeof supportedBoxProps | string[];

export const filterBoxPropsFromProps = (props: {}, exceptions: Exceptions = []): {} => {
  const boxPropsToFilter = supportedBoxProps.filter(prop => {
    return !exceptions.includes(prop);
  });
  return lodash.omit(props, boxPropsToFilter);
};
